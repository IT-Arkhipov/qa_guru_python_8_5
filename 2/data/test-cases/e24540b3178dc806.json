{"uid":"e24540b3178dc806","name":"test_demoqa_complete_form","fullName":"tests.test_demoqa#test_demoqa_complete_form","historyId":"6bded46293bf7a1a8a3e70b6a8f64056","time":{"start":1699119742167,"stop":1699119751457,"duration":9290},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55a39b17b5e3 <unknown>\n#1 0x55a39ae3e0b7 <unknown>\n#2 0x55a39ae74e55 <unknown>\n#3 0x55a39ae71b81 <unknown>\n#4 0x55a39aebc47f <unknown>\n#5 0x55a39aeb2cc3 <unknown>\n#6 0x55a39ae7e0e4 <unknown>\n#7 0x55a39ae7f0ae <unknown>\n#8 0x55a39b141ce1 <unknown>\n#9 0x55a39b145b7e <unknown>\n#10 0x55a39b12f4b5 <unknown>\n#11 0x55a39b1467d6 <unknown>\n#12 0x55a39b112dbf <unknown>\n#13 0x55a39b169748 <unknown>\n#14 0x55a39b169917 <unknown>\n#15 0x55a39b17a773 <unknown>\n#16 0x7f7c93494ac3 <unknown>","statusTrace":"def test_demoqa_complete_form():\n        with allure.step('Открытие страницы с формой регистрации'):\n>           browser.open(\"/automation-practice-form\")\n\ntests/test_demoqa.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1910c427e0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x55a39b169917 \\\\u003Cunknown>\\\\n#15 0x55a39b17a773 \\\\u003Cunknown>\\\\n#16 0x7f7c93494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55a39b17b5e3 <unknown>\nE       #1 0x55a39ae3e0b7 <unknown>\nE       #2 0x55a39ae74e55 <unknown>\nE       #3 0x55a39ae71b81 <unknown>\nE       #4 0x55a39aebc47f <unknown>\nE       #5 0x55a39aeb2cc3 <unknown>\nE       #6 0x55a39ae7e0e4 <unknown>\nE       #7 0x55a39ae7f0ae <unknown>\nE       #8 0x55a39b141ce1 <unknown>\nE       #9 0x55a39b145b7e <unknown>\nE       #10 0x55a39b12f4b5 <unknown>\nE       #11 0x55a39b1467d6 <unknown>\nE       #12 0x55a39b112dbf <unknown>\nE       #13 0x55a39b169748 <unknown>\nE       #14 0x55a39b169917 <unknown>\nE       #15 0x55a39b17a773 <unknown>\nE       #16 0x7f7c93494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser_config","time":{"start":1699119742166,"stop":1699119742167,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55a39b17b5e3 <unknown>\n#1 0x55a39ae3e0b7 <unknown>\n#2 0x55a39ae74e55 <unknown>\n#3 0x55a39ae71b81 <unknown>\n#4 0x55a39aebc47f <unknown>\n#5 0x55a39aeb2cc3 <unknown>\n#6 0x55a39ae7e0e4 <unknown>\n#7 0x55a39ae7f0ae <unknown>\n#8 0x55a39b141ce1 <unknown>\n#9 0x55a39b145b7e <unknown>\n#10 0x55a39b12f4b5 <unknown>\n#11 0x55a39b1467d6 <unknown>\n#12 0x55a39b112dbf <unknown>\n#13 0x55a39b169748 <unknown>\n#14 0x55a39b169917 <unknown>\n#15 0x55a39b17a773 <unknown>\n#16 0x7f7c93494ac3 <unknown>","statusTrace":"def test_demoqa_complete_form():\n        with allure.step('Открытие страницы с формой регистрации'):\n>           browser.open(\"/automation-practice-form\")\n\ntests/test_demoqa.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/entity.py:1155: in open\n    self.config._executor.get_url(relative_or_absolute_url)\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py:301: in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py:216: in get\n    driver = config.driver\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py:343: in __get__\n    driver = config.build_driver_strategy(config)\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py:171: in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py:93: in install_and_build_chrome\n    return Chrome(\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:56: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1910c427e0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\\\n#14 0x55a39b169917 \\\\u003Cunknown>\\\\n#15 0x55a39b17a773 \\\\u003Cunknown>\\\\n#16 0x7f7c93494ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x55a39b17b5e3 <unknown>\nE       #1 0x55a39ae3e0b7 <unknown>\nE       #2 0x55a39ae74e55 <unknown>\nE       #3 0x55a39ae71b81 <unknown>\nE       #4 0x55a39aebc47f <unknown>\nE       #5 0x55a39aeb2cc3 <unknown>\nE       #6 0x55a39ae7e0e4 <unknown>\nE       #7 0x55a39ae7f0ae <unknown>\nE       #8 0x55a39b141ce1 <unknown>\nE       #9 0x55a39b145b7e <unknown>\nE       #10 0x55a39b12f4b5 <unknown>\nE       #11 0x55a39b1467d6 <unknown>\nE       #12 0x55a39b112dbf <unknown>\nE       #13 0x55a39b169748 <unknown>\nE       #14 0x55a39b169917 <unknown>\nE       #15 0x55a39b17a773 <unknown>\nE       #16 0x7f7c93494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException","steps":[{"name":"Открытие страницы с формой регистрации","time":{"start":1699119742167,"stop":1699119751454,"duration":9287},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55a39b17b5e3 <unknown>\n#1 0x55a39ae3e0b7 <unknown>\n#2 0x55a39ae74e55 <unknown>\n#3 0x55a39ae71b81 <unknown>\n#4 0x55a39aebc47f <unknown>\n#5 0x55a39aeb2cc3 <unknown>\n#6 0x55a39ae7e0e4 <unknown>\n#7 0x55a39ae7f0ae <unknown>\n#8 0x55a39b141ce1 <unknown>\n#9 0x55a39b145b7e <unknown>\n#10 0x55a39b12f4b5 <unknown>\n#11 0x55a39b1467d6 <unknown>\n#12 0x55a39b112dbf <unknown>\n#13 0x55a39b169748 <unknown>\n#14 0x55a39b169917 <unknown>\n#15 0x55a39b17a773 <unknown>\n#16 0x7f7c93494ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/qa_guru_python_8_5/qa_guru_python_8_5/tests/test_demoqa.py\", line 9, in test_demoqa_complete_form\n    browser.open(\"/automation-practice-form\")\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/entity.py\", line 1155, in open\n    self.config._executor.get_url(relative_or_absolute_url)\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py\", line 301, in get_url\n    self.config._driver_get_url_strategy(self.config)(url)\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py\", line 216, in get\n    driver = config.driver\n             ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py\", line 343, in __get__\n    driver = config.build_driver_strategy(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py\", line 171, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n           ^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py\", line 93, in install_and_build_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"59aa58b7438c5e06","name":"stderr","source":"59aa58b7438c5e06.txt","type":"text/plain","size":675}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"browser_config::0","time":{"start":1699119751584,"stop":1699119752537,"duration":953},"status":"broken","statusMessage":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x5654e0db65e3 <unknown>\n#1 0x5654e0a790b7 <unknown>\n#2 0x5654e0aafe55 <unknown>\n#3 0x5654e0aacb81 <unknown>\n#4 0x5654e0af747f <unknown>\n#5 0x5654e0aedcc3 <unknown>\n#6 0x5654e0ab90e4 <unknown>\n#7 0x5654e0aba0ae <unknown>\n#8 0x5654e0d7cce1 <unknown>\n#9 0x5654e0d80b7e <unknown>\n#10 0x5654e0d6a4b5 <unknown>\n#11 0x5654e0d817d6 <unknown>\n#12 0x5654e0d4ddbf <unknown>\n#13 0x5654e0da4748 <unknown>\n#14 0x5654e0da4917 <unknown>\n#15 0x5654e0db5773 <unknown>\n#16 0x7fc798094ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 911, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/qa_guru_python_8_5/qa_guru_python_8_5/tests/conftest.py\", line 26, in browser_config\n    browser.quit()\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/entity.py\", line 1205, in quit\n    self.driver.quit()\n    ^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/entity.py\", line 1100, in driver\n    return self.config.driver\n           ^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py\", line 343, in __get__\n    driver = config.build_driver_strategy(config)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py\", line 171, in _build_local_driver_by_name_or_remote_by_url_and_options\n    return {  # type: ignore\n           ^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selene/core/configuration.py\", line 93, in install_and_build_chrome\n    return Chrome(\n           ^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 56, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 205, in __init__\n    self.start_session(capabilities)\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 289, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.12.0/x64/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_demoqa"},{"name":"host","value":"fv-az1114-435"},{"name":"thread","value":"2281-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_demoqa"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"d4fb9c63ddda12d4","reportUrl":"https://IT-Arkhipov.github.io/qa_guru_python_8_5/2//#testresult/d4fb9c63ddda12d4","status":"broken","statusDetails":"selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\n  (session not created: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x555dd76755e3 <unknown>\n#1 0x555dd73380b7 <unknown>\n#2 0x555dd736ee55 <unknown>\n#3 0x555dd736bb81 <unknown>\n#4 0x555dd73b647f <unknown>\n#5 0x555dd73accc3 <unknown>\n#6 0x555dd73780e4 <unknown>\n#7 0x555dd73790ae <unknown>\n#8 0x555dd763bce1 <unknown>\n#9 0x555dd763fb7e <unknown>\n#10 0x555dd76294b5 <unknown>\n#11 0x555dd76407d6 <unknown>\n#12 0x555dd760cdbf <unknown>\n#13 0x555dd7663748 <unknown>\n#14 0x555dd7663917 <unknown>\n#15 0x555dd7674773 <unknown>\n#16 0x7fbce9694ac3 <unknown>","time":{"start":1699119382495,"stop":1699119384667,"duration":2172}}]},"tags":[]},"source":"e24540b3178dc806.json","parameterValues":[]}